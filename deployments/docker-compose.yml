version: '3.9'

#  1.5 CPUs = 0.70 MongoDB + 2 x 0.35 Spring Boot + 0.05 Redis + 0.05 NGinx
#    3.0 GB = 0.65 MongoDB + 2 x 1.10 Spring Boot + 0.05 Redis + 0.10 NGinx

services:
  go-api1:
    build:
      context: ..
      dockerfile: ./build/Dockerfile
    hostname: go-api1
    environment:
      - SERVER_PORT=8090
    network_mode: host
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: '0.5GB'
#    networks:
#      - app-network

  go-api2:
    build:
      context: ..
      dockerfile: ./build/Dockerfile
    hostname: go-api2
    environment:
      - SERVER_PORT=8091
    network_mode: host
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: '0.5GB'
#    networks:
#      - app-network

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - go-api1
      - go-api2
    ports:
      - "9999:9999"
    network_mode: host
#    networks:
#      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '0.5GB'

  db: # Banco de dados
    image: postgres
    hostname: db
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: rinhadb
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgresql.conf:/docker-entrypoint-initdb.d/postgresql.conf
    command: postgres -c config_file=/docker-entrypoint-initdb.d/postgresql.conf
    ports:
      - 5432:5432
    deploy:
      resources:
        limits:
          cpus: '0.9'
          memory: '1.5GB'

#  prometheus:
#    image: prom/prometheus:v2.44.0
#    container_name: prometheus
#    network_mode: host
#    ports:
#      - "9090:9090"
#    volumes:
#      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
#
#  grafana:
#    image: grafana/grafana:9.5.2
#    container_name: grafana
#    network_mode: host
#    ports:
#      - "3000:3000"
#    restart: unless-stopped
#    volumes:
#      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
#
#
#  # source https://github.com/prometheus/node_exporter
#  # https://github.com/vegasbrianc/prometheus/
#  prometheus-node-exporter:
#    image: prom/node-exporter:v1.7.0
#    container_name: prometheus-node-exporter
#    restart: always
#    volumes:
#      - /proc:/host/proc:ro
#      - /sys:/host/sys:ro
#      - /:/rootfs:ro
#    command:
#      - '--path.procfs=/host/proc'
#      - '--path.sysfs=/host/sys'
#      - --collector.filesystem.ignored-mount-points
#      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
#    network_mode: host
#    privileged: true
#    depends_on:
#      - prometheus
#    expose:
#      - 9100
#  # source: https://github.com/google/cadvisor
#  cadvisor:
#    image: gcr.io/cadvisor/cadvisor:v0.47.2
#    container_name: cadvisor
#    restart: always
#    depends_on:
#      - prometheus
#    volumes:
#      - /:/rootfs:ro
#      - /var/run:/var/run:ro
#      - /sys:/sys:ro
#      - /var/snap/docker/common/var-lib-docker/:/var/lib/docker:ro
#      - /dev/disk/:/dev/disk:ro
#    ports:
#      - "8080:8081"
#    network_mode: host
#
##networks:
##  app-network:
